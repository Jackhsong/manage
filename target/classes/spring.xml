<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				         http://www.springframework.org/schema/context
				         http://www.springframework.org/schema/context/spring-context-3.0.xsd
				         http://www.springframework.org/schema/tx
				         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				         http://www.springframework.org/schema/aop 
				         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="com.ygg.webapp.dao,com.ygg.webapp.service,com.ygg.webapp.cache" />

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="jdbc:mysql://rm-bp13dna762d2b1l8z.mysql.rds.aliyuncs.com:3306/sale_platform?useUnicode=true&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" />
		<property name="username" value="fsafgasag" />
		<property name="password" value="gsdg52" />
		<!-- 初始化连接大小 -->
	    <property name="initialSize" value="${initialSize}"></property>
	    <!-- 连接池最大数量 -->
	    <property name="maxActive" value="${maxActive}"></property>
	    <!-- 连接池最大空闲 -->
	    <property name="maxIdle" value="${maxIdle}"></property>
	    <!-- 连接池最小空闲 -->
	    <property name="minIdle" value="${minIdle}"></property>
	    <!-- 获取连接最大等待时间 -->
	    <property name="maxWait" value="${maxWait}"></property>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 , 关闭30分钟内没有使用的连接 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 <property name="filters" value="stat"/> -->
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
		<property name="typeAliasesPackage" value="com.ygg.webapp.entity" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean id="stringHttpMessageConverter"
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<constructor-arg index="0">
						<value>UTF-8</value>
					</constructor-arg>
				</bean>
				<bean id="byteArrayHttpMessageConverter"
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean id="formHttpMessageConverter"
					class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean id="sourceHttpMessageConverter"
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean id="allEncompassingFormHttpMessageConverter"
					class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="register*" propagation="REQUIRED" />
			<tx:method name="generate*" propagation="REQUIRED" />
			<tx:method name="submit*" propagation="REQUIRED" />
			<tx:method name="draw*" propagation="REQUIRED" /><!-- 抽奖活动需要事务处理 -->
			<tx:method name="receive*" propagation="REQUIRED" /><!-- 玩游戏领取优惠券需要事务处理 -->
			<tx:method name="appOpenDoor" propagation="REQUIRED" /><!--app用户任意门领取优惠券需要事务处理 -->
			<tx:method name="subscribe" propagation="REQUIRED" />
			<tx:method name="execute*" propagation="REQUIRED" />
			<tx:method name="confirm" propagation="REQUIRED" /><!-- 订单确认需要事务处理 -->
			<tx:method name="autoConfirm*" propagation="REQUIRED" /> <!--订单自动确认收货需要事务处理 -->
			<tx:method name="justDoItInNewTranscation" propagation="REQUIRES_NEW" />

			<tx:method name="pay*" propagation="REQUIRED" /> <!-- 订单支付 -->

			<tx:method name="weixinCallBack" propagation="REQUIRED" /> <!-- 微信的回调接口 -->
			<tx:method name="verificationCode" propagation="REQUIRED" />
			<tx:method name="resetPwd" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" /> <!-- ThreadService线程类检查购物车中的数量 -->
			<tx:method name="editCrudsc" propagation="REQUIRED" /><!-- ShoppingCartServiceNew -->
			<tx:method name="updateShoppingCart" propagation="REQUIRES_NEW" />
			<tx:method name="aliNotifyCallBack" propagation="REQUIRES_NEW" />
			<tx:method name="aliReturnCallBack" propagation="REQUIRES_NEW" />
			<tx:method name="weixinNotifyCallBack" propagation="REQUIRES_NEW" />
			<tx:method name="weixinReturnCallBack" propagation="REQUIRES_NEW" />
			<tx:method name="testSpringTransaction" propagation="REQUIRES_NEW" /><!--testst -->

			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="false" />
			<tx:method name="view*" read-only="true" />
			<tx:method name="list*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.ygg.webapp.service..*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<!-- 上传下载 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 统一异常处理 只要在controller层中用 try{}catch(Exception e){throw newXXException } 暂时不设置-->
	<bean id="exceptionResolver" class="com.ygg.webapp.exception.ExceptionHandler"/> 
   
</beans>
				         